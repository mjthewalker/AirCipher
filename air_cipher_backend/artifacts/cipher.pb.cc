// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cipher.proto
// Protobuf C++ Version: 5.29.0

#include "cipher.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace aircipher {

inline constexpr MessageAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recieved_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MessageAck::MessageAck(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageAckDefaultTypeInternal() {}
  union {
    MessageAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageAckDefaultTypeInternal _MessageAck_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sender_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reciever_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
}  // namespace aircipher
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cipher_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cipher_2eproto = nullptr;
const ::uint32_t
    TableStruct_cipher_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::aircipher::Message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aircipher::Message, _impl_.sender_uid_),
        PROTOBUF_FIELD_OFFSET(::aircipher::Message, _impl_.reciever_uid_),
        PROTOBUF_FIELD_OFFSET(::aircipher::Message, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::aircipher::Message, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::aircipher::MessageAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::aircipher::MessageAck, _impl_.recieved_),
        PROTOBUF_FIELD_OFFSET(::aircipher::MessageAck, _impl_.status_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::aircipher::Message)},
        {12, -1, -1, sizeof(::aircipher::MessageAck)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::aircipher::_Message_default_instance_._instance,
    &::aircipher::_MessageAck_default_instance_._instance,
};
const char descriptor_table_protodef_cipher_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014cipher.proto\022\taircipher\"W\n\007Message\022\022\n\n"
    "sender_uid\030\001 \001(\t\022\024\n\014reciever_uid\030\002 \001(\t\022\017"
    "\n\007payload\030\003 \001(\t\022\021\n\ttimestamp\030\004 \001(\003\".\n\nMe"
    "ssageAck\022\020\n\010recieved\030\001 \001(\010\022\016\n\006status\030\002 \001"
    "(\t2F\n\nAirService\0228\n\013SendMessage\022\022.aircip"
    "her.Message\032\025.aircipher.MessageAckb\006prot"
    "o3"
};
static ::absl::once_flag descriptor_table_cipher_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cipher_2eproto = {
    false,
    false,
    242,
    descriptor_table_protodef_cipher_2eproto,
    "cipher.proto",
    &descriptor_table_cipher_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_cipher_2eproto::offsets,
    file_level_enum_descriptors_cipher_2eproto,
    file_level_service_descriptors_cipher_2eproto,
};
namespace aircipher {
// ===================================================================

class Message::_Internal {
 public:
};

Message::Message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aircipher.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aircipher::Message& from_msg)
      : sender_uid_(arena, from.sender_uid_),
        reciever_uid_(arena, from.reciever_uid_),
        payload_(arena, from.payload_),
        _cached_size_{0} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:aircipher.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sender_uid_(arena),
        reciever_uid_(arena),
        payload_(arena),
        _cached_size_{0} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:aircipher.Message)
  SharedDtor(*this);
}
inline void Message::SharedDtor(MessageLite& self) {
  Message& this_ = static_cast<Message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sender_uid_.Destroy();
  this_._impl_.reciever_uid_.Destroy();
  this_._impl_.payload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Message(arena);
}
constexpr auto Message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Message),
                                            alignof(Message));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Message>(), &Message::ByteSizeLong,
            &Message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Message, _impl_._cached_size_),
        false,
    },
    &Message::kDescriptorMethods,
    &descriptor_table_cipher_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 55, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aircipher::Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.timestamp_)}},
    // string sender_uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.sender_uid_)}},
    // string reciever_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.reciever_uid_)}},
    // string payload = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sender_uid = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.sender_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reciever_uid = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.reciever_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string payload = 3;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\21\12\14\7\0\0\0\0"
    "aircipher.Message"
    "sender_uid"
    "reciever_uid"
    "payload"
  }},
};

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:aircipher.Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_uid_.ClearToEmpty();
  _impl_.reciever_uid_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  _impl_.timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aircipher.Message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sender_uid = 1;
          if (!this_._internal_sender_uid().empty()) {
            const std::string& _s = this_._internal_sender_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aircipher.Message.sender_uid");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string reciever_uid = 2;
          if (!this_._internal_reciever_uid().empty()) {
            const std::string& _s = this_._internal_reciever_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aircipher.Message.reciever_uid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string payload = 3;
          if (!this_._internal_payload().empty()) {
            const std::string& _s = this_._internal_payload();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aircipher.Message.payload");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int64 timestamp = 4;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aircipher.Message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Message::ByteSizeLong(const MessageLite& base) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Message::ByteSizeLong() const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aircipher.Message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string sender_uid = 1;
            if (!this_._internal_sender_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender_uid());
            }
            // string reciever_uid = 2;
            if (!this_._internal_reciever_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reciever_uid());
            }
            // string payload = 3;
            if (!this_._internal_payload().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_payload());
            }
            // int64 timestamp = 4;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aircipher.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender_uid().empty()) {
    _this->_internal_set_sender_uid(from._internal_sender_uid());
  }
  if (!from._internal_reciever_uid().empty()) {
    _this->_internal_set_reciever_uid(from._internal_reciever_uid());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aircipher.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_uid_, &other->_impl_.sender_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reciever_uid_, &other->_impl_.reciever_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MessageAck::_Internal {
 public:
};

MessageAck::MessageAck(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:aircipher.MessageAck)
}
inline PROTOBUF_NDEBUG_INLINE MessageAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::aircipher::MessageAck& from_msg)
      : status_(arena, from.status_),
        _cached_size_{0} {}

MessageAck::MessageAck(
    ::google::protobuf::Arena* arena,
    const MessageAck& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MessageAck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.recieved_ = from._impl_.recieved_;

  // @@protoc_insertion_point(copy_constructor:aircipher.MessageAck)
}
inline PROTOBUF_NDEBUG_INLINE MessageAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : status_(arena),
        _cached_size_{0} {}

inline void MessageAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.recieved_ = {};
}
MessageAck::~MessageAck() {
  // @@protoc_insertion_point(destructor:aircipher.MessageAck)
  SharedDtor(*this);
}
inline void MessageAck::SharedDtor(MessageLite& self) {
  MessageAck& this_ = static_cast<MessageAck&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.status_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MessageAck::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MessageAck(arena);
}
constexpr auto MessageAck::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MessageAck),
                                            alignof(MessageAck));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MessageAck::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MessageAck_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MessageAck::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MessageAck>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MessageAck::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MessageAck>(), &MessageAck::ByteSizeLong,
            &MessageAck::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MessageAck, _impl_._cached_size_),
        false,
    },
    &MessageAck::kDescriptorMethods,
    &descriptor_table_cipher_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MessageAck::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 35, 2> MessageAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::aircipher::MessageAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string status = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MessageAck, _impl_.status_)}},
    // bool recieved = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MessageAck, _impl_.recieved_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MessageAck, _impl_.recieved_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool recieved = 1;
    {PROTOBUF_FIELD_OFFSET(MessageAck, _impl_.recieved_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string status = 2;
    {PROTOBUF_FIELD_OFFSET(MessageAck, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\6\0\0\0\0\0"
    "aircipher.MessageAck"
    "status"
  }},
};

PROTOBUF_NOINLINE void MessageAck::Clear() {
// @@protoc_insertion_point(message_clear_start:aircipher.MessageAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _impl_.recieved_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MessageAck::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MessageAck& this_ = static_cast<const MessageAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MessageAck::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MessageAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:aircipher.MessageAck)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool recieved = 1;
          if (this_._internal_recieved() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_recieved(), target);
          }

          // string status = 2;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "aircipher.MessageAck.status");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:aircipher.MessageAck)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MessageAck::ByteSizeLong(const MessageLite& base) {
          const MessageAck& this_ = static_cast<const MessageAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MessageAck::ByteSizeLong() const {
          const MessageAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:aircipher.MessageAck)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string status = 2;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // bool recieved = 1;
            if (this_._internal_recieved() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MessageAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageAck*>(&to_msg);
  auto& from = static_cast<const MessageAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:aircipher.MessageAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_recieved() != 0) {
    _this->_impl_.recieved_ = from._impl_.recieved_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageAck::CopyFrom(const MessageAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aircipher.MessageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageAck::InternalSwap(MessageAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
        swap(_impl_.recieved_, other->_impl_.recieved_);
}

::google::protobuf::Metadata MessageAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace aircipher
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cipher_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
